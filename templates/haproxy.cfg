global
	maxconn 10000

defaults
	log global
	mode tcp
	retries 2
	timeout client 30m
	timeout connect 4s
	timeout server 30m
	timeout check 5s

frontend prometheus
	bind *:7000
	mode http
	http-request use-service prometheus-exporter if { path /metrics }
	no log
	stats enable
	stats uri /
	stats refresh 10s

listen postgres_write
	bind *:{{ haproxy_write_port }}
	mode tcp
	maxconn 1000
	option httpchk
	http-check expect status 200
	default-server inter 3s fall 3 rise 3 on-marked-down shutdown-sessions
{% for host in pgsql_server_ips %}
	server {{ host }} {{ host }}:{{ postgresql_port }} maxconn 300 check port {{ patroni_port }}
{% endfor %}

{% if haproxy_primary_read_scale is defined %}
listen postgres_read
	bind *:{{ haproxy_read_port }}
	mode tcp
	balance leastconn
	option pgsql-check user {{ haproxy_health_check_user | default("haproxy") }}
	default-server inter 3s fall 3 rise 3 on-marked-down shutdown-sessions
{% for host in pgsql_server_ips %}
	server {{ host }} {{ host }}:{{ postgresql_port }} check
{% endfor %}
{% else %}
listen postgres_read
	bind *:{{ haproxy_read_port }}
	mode tcp
	balance leastconn
	option httpchk
	http-check expect status 503
	default-server inter 3s fall 3 rise 3 on-marked-down shutdown-sessions
{% for host in pgsql_server_ips %}
	server {{ host }} {{ host }}:{{ postgresql_port }} check port {{ patroni_port }}
{% endfor %}
{% endif %}
